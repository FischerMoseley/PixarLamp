function export_trajectory(t, z, optimal_ctrl)
%% Extract th1, th2, u1, u2 trajectories
% Resample so that trajectort points are 10ms apart
dynamic_trajectory_length = floor(t(end) / 0.01);
dynamic_points = linspace(0, dynamic_trajectory_length, dynamic_trajectory_length);
zint = interp1(t',z',(dynamic_points*0.01)', 'linear')';

th1 = zint(2, :);
th2 = zint(3, :);
dth1 = zint(4, :);
dth2 = zint(5, :);

torque_trajectory_length = floor(optimal_ctrl.tf / 0.01);
torque_points = linspace(0, torque_trajectory_length, torque_trajectory_length);

for i=1:length(torque_points)
    ctrl1_input(i) = BezierCurve(optimal_ctrl.T1,(0.01 * torque_points(i))/optimal_ctrl.tf);
    ctrl2_input(i) = BezierCurve(optimal_ctrl.T2,(0.01 * torque_points(i))/optimal_ctrl.tf);
end

%% Build file
preamble = strcat("// trajectory.h, autogenerated on ", datestr(clock));

n = [12345 6789 10234 3452];
% assemble trajectory length
dynamic_traj_len = strcat("const uint32_t dynamic_trajectory_length = ", string(dynamic_trajectory_length), "; // in samples, where samples are 10ms apart");

% assemble th1 array
th1_traj = sprintf('%.3f, ' , th1);
th1_traj = th1_traj(1:end-2); % strip final comma
th1_traj = strcat("float th1_trajectory[] = \n{",th1_traj,"};");

% assemble th2 array
th2_traj = sprintf('%.3f, ' , th2);
th2_traj = th2_traj(1:end-2); % strip final comma
th2_traj = strcat("float th2_trajectory[] = \n{",th2_traj,"};");

% assemble dth1 array
dth1_traj = sprintf('%.3f, ' , dth1);
dth1_traj = dth1_traj(1:end-2); % strip final comma
dth1_traj = strcat("float dth1_trajectory[] = \n{",dth1_traj,"};");

% assemble dth2 array
dth2_traj = sprintf('%.3f, ' , dth2);
dth2_traj = dth2_traj(1:end-2); % strip final comma
dth2_traj = strcat("float dth2_trajectory[] = \n{",dth2_traj,"};");

% assemble trajectory length
torque_traj_len = strcat("const uint32_t torque_trajectory_length = ", string(torque_trajectory_length), "; // in samples, where samples are 10ms apart");

% assemble u1 array
u1_traj = sprintf('%.3f, ' , ctrl1_input);
u1_traj = u1_traj(1:end-2); % strip final comma
u1_traj = strcat("float u1_trajectory[] = \n{",u1_traj,"};");

% assemble u2 array
u2_traj = sprintf('%.3f, ' , ctrl2_input);
u2_traj = u2_traj(1:end-2); % strip final comma
u2_traj = strcat("float u2_trajectory[] = \n{",u2_traj,"};");

contents = strcat(preamble, "\n\n", ...
                  dynamic_traj_len, "\n\n", ...
                  th1_traj, "\n\n", ...
                  th2_traj, "\n\n", ...
                  dth1_traj, "\n\n", ...
                  dth2_traj, "\n\n\n", ...
                  torque_traj_len, "\n\n", ...
                  u1_traj, "\n\n", ...
                  u2_traj);

% write to file
file = fopen('trajectory.h','wt');
fprintf(file, contents);
fclose(file);
end